<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Loyola CS Systems Guide â€“ Linux</title><link>/tags/linux/</link><description>Recent content in Linux on Loyola CS Systems Guide</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Thu, 05 Jan 2017 00:00:00 +0000</lastBuildDate><atom:link href="/tags/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Command Line Basics</title><link>/docs/how-to/linux-primer/</link><pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate><guid>/docs/how-to/linux-primer/</guid><description>
&lt;h2 id="getting-started">Getting Started&lt;/h2>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>All computer science majors and interdisciplinary majors now take COMP 141, which teaches you about the command line and fundamentals of Unix/Linux.
This is primarily aimed at those who have not taken &lt;a href="https://academics.cs.luc.edu/courses/comp141.html">COMP 141&lt;/a>, which should become a small number after 2022.&lt;/p>
&lt;/div>
&lt;p>There are many tutorials on the web, just Google around and you will
find them. A decent online tutorial is available for example at
&lt;a href="http://www.linux.org/lessons/beginner/toc.html">Linux.org&lt;/a> one can also
find books on Linux in a bookstore, for those who prefer a hard copy.
Linux is derived from Unix, and many of its commands are identical with,
or very similar to, older Unix commands. Since Apple's Mac OS X is also
derived from a version of Unix (BSD Unix), many of these commands are
the same as on a Mac.&lt;/p>
&lt;h2 id="essential-commands">Essential Commands&lt;/h2>
&lt;p>Typically one interacts with a Unix/Linux system using a Command Line
Interface (CLI), also known as a Terminal or a Shell. Unless one is
using a Desktop Manager on a Linux system, running programs (commands)
is by typing on the command line. Some of the more common commands that
just about everyone uses are listed below:&lt;/p>
&lt;ul>
&lt;li>&lt;code>pwd&lt;/code> - &amp;quot;print working directory&amp;quot; prints the name of the current
folder&lt;/li>
&lt;li>&lt;code>ls&lt;/code> - list directory lists all the files in the current folder&lt;/li>
&lt;li>&lt;code>ls -l&lt;/code> - long list lists the files along with permissions, creation
dates, etc&lt;/li>
&lt;li>&lt;code>ls -A&lt;/code> - list all files in current folder, including the hidden
ones&lt;/li>
&lt;li>&lt;code>cd&lt;/code> - change directory moves the current folder back to one's home
folder&lt;/li>
&lt;li>&lt;code>cd &amp;lt;pathname&amp;gt;&lt;/code> - change current folder to the one named by
&amp;lt;pathname&amp;gt;&lt;/li>
&lt;li>&lt;code>cd ..&lt;/code> - change to the parent folder of current folder&lt;/li>
&lt;li>&lt;code>mkdir &amp;lt;foldername&amp;gt;&lt;/code> - make a new folder (folders are also known as
directories)&lt;/li>
&lt;li>&lt;code>cat &amp;lt;filename&amp;gt;&lt;/code> - prints the contents of a text file&lt;/li>
&lt;li>&lt;code>cat &amp;lt;file1&amp;gt; &amp;lt;file2&amp;gt; &amp;gt; &amp;lt;file3&amp;gt;&lt;/code> - joins together text files &amp;lt;file1&amp;gt;
and &amp;lt;file2&amp;gt; and puts the result in &amp;lt;file3&amp;gt; (cat - is short for
concatenate)&lt;/li>
&lt;li>&lt;code>less &amp;lt;filename&amp;gt;&lt;/code> - lets you scroll up and down through a text file;
use Q to quit&lt;/li>
&lt;li>&lt;code>cp &amp;lt;file1&amp;gt; &amp;lt;file2&amp;gt;&lt;/code> - makes a copy of &amp;lt;file1&amp;gt; named &amp;lt;file2&amp;gt; in
the current folder; previous contents of &amp;lt;file2&amp;gt; (if any) are lost&lt;/li>
&lt;li>&lt;code>mv &amp;lt;file1&amp;gt; &amp;lt;file2&amp;gt;&lt;/code> - move &amp;lt;file1&amp;gt; to &amp;lt;file2&amp;gt;; used to rename a
file (previous contents of &amp;lt;file2&amp;gt; are lost)&lt;/li>
&lt;li>&lt;code>mv &amp;lt;foldername1&amp;gt; &amp;lt;foldername2&amp;gt;&lt;/code> - move &amp;lt;foldername1&amp;gt; to
&amp;lt;foldername2&amp;gt;; used to rename a folder name&lt;/li>
&lt;li>&lt;code>rm &amp;lt;file&amp;gt;&lt;/code> - remove a file (delete it)&lt;/li>
&lt;li>&lt;code>rm -r *&lt;/code> - recursively remove all files and folders in the current
folder (be VERY careful with this)&lt;/li>
&lt;li>&lt;code>rm -r &amp;lt;foldername&amp;gt;&lt;/code> - recursively remove the folder and all its
contents, including subfolders and their files&lt;/li>
&lt;li>&lt;code>rmdir &amp;lt;foldername&amp;gt;&lt;/code> - remove a folder (delete it); the folder must
be empty&lt;/li>
&lt;li>&lt;code>man &amp;lt;command&amp;gt;&lt;/code> - shows the manual page for the given &amp;lt;command&amp;gt;&lt;/li>
&lt;li>&lt;code>passwd&lt;/code> - change your password&lt;/li>
&lt;li>&lt;code>lpr &amp;lt;filename&amp;gt;&lt;/code> - print a file; should work with text, postscript,
and .pdf files.&lt;/li>
&lt;li>&lt;code>lpq&lt;/code> - show status of printer and print jobs&lt;/li>
&lt;li>&lt;code>lprm&lt;/code> &amp;lt;printno&amp;gt; - remove a printer job from the queue&lt;/li>
&lt;li>&lt;code>a2ps&lt;/code> - anything to postscript this (if installed) converts a file
into postcript and then prints it; gives nicer formatting for text
files&lt;/li>
&lt;li>&lt;code>nano&lt;/code> - edit a text file with a user friendly interface&lt;/li>
&lt;li>&lt;code>pico&lt;/code> - edit a text file (usually pico and nano are equivalent)&lt;/li>
&lt;li>&lt;code>nano &amp;lt;filename&amp;gt;&lt;/code> - edit the named file&lt;/li>
&lt;li>&lt;code>vi &amp;lt;filename&amp;gt;&lt;/code> - the old Unix visual editor; see the man page for
help&lt;/li>
&lt;li>&lt;code>emacs &amp;lt;filename&amp;gt;&lt;/code> - edit with the GNU Emacs editor; see the man
page for help&lt;/li>
&lt;li>&lt;code>exit&lt;/code> - quits the current Terminal session; CTRL-D often does the
same&lt;/li>
&lt;li>&lt;code>ping &amp;lt;URL&amp;gt;&lt;/code> - see if an IP address is answering&lt;/li>
&lt;li>&lt;code>who&lt;/code> - see who is logged on&lt;/li>
&lt;li>&lt;code>whoami&lt;/code> - see who you are (for the existentially challenged)&lt;/li>
&lt;li>&lt;code>top&lt;/code> - show the top running processes in a list, with process
numbers&lt;/li>
&lt;li>&lt;code>kill &amp;lt;number&amp;gt;&lt;/code> - kill a process number (you have to own the
process)&lt;/li>
&lt;li>&lt;code>finger &amp;lt;name&amp;gt;&lt;/code> - show stats for the user &amp;lt;name&amp;gt;; with no &amp;lt;name&amp;gt;
finger shows stats for all current users&lt;/li>
&lt;/ul>
&lt;p>Note that by default you are positioned in your home folder after
signing in. The file system is a tree with root at /, so to view the
entire file system start by typing cd followed by ls and so forth.
Pathnames are separated by forward slashes, so for example a file named
whosis in your home folder /home/myuserid has pathname
/home/myuserid/whosis. You can always refer to files by their fully
qualified pathnames, but lacking the full pathname the system will look
for the file in the current folder. Note that CTRL-C often cancels the
current process, and CTRL-D often serves as an End of File marker. All
of the above merely scratches the surface; see external documentation
for further particulars and advice.&lt;/p>
&lt;h2 id="why-learn-linux">Why learn Linux?&lt;/h2>
&lt;p>Because Unix and its offshoots remains one of the most important
operating systems for servers, and many networking concepts are rooted
in Unix for historical reasons. Because Unix/Linux systems are
efficient, fast, and highly stable. Because Unix/Linux is powerful:
check out wildcards, regular expressions, pipes, redirecting input and
output, shell scripts, and cron jobs for starters. There are some very
cool ideas here for the cognoscenti that just don't in the Windows
world (or are unwieldy when transplanted there). Linux is open source
software.&lt;/p>
&lt;h2 id="trying-linux">Trying Linux&lt;/h2>
&lt;p>For those who want to try it out on your personal laptop or desktop,
find a decent Linux distribution such as
&lt;a href="http://www.ubuntu.com/">Ubuntu&lt;/a>, download and burn the installation CD
for your hardware, and boot from the CD. This will give you a working
version of Linux running from the CD (slow) that can be played with. You
can also choose to install Linux on your hard drive next to the existing
OS (a dual boot approach) so that you can choose the OS at boot time, or
choose to install Linux in place of your existing OS.&lt;/p></description></item></channel></rss>