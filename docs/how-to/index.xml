<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Loyola CS Systems Guide â€“ How To</title><link>/docs/how-to/</link><description>Recent content in How To on Loyola CS Systems Guide</description><generator>Hugo -- gohugo.io</generator><atom:link href="/docs/how-to/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Command Line Basics</title><link>/docs/how-to/linux-primer/</link><pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate><guid>/docs/how-to/linux-primer/</guid><description>
&lt;h2 id="getting-started">Getting Started&lt;/h2>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>All computer science majors and interdisciplinary majors now take COMP 141, which teaches you about the command line and fundamentals of Unix/Linux.
This is primarily aimed at those who have not taken &lt;a href="https://academics.cs.luc.edu/courses/comp141.html">COMP 141&lt;/a>, which should become a small number after 2022.&lt;/p>
&lt;/div>
&lt;p>There are many tutorials on the web, just Google around and you will
find them. A decent online tutorial is available for example at
&lt;a href="http://www.linux.org/lessons/beginner/toc.html">Linux.org&lt;/a> one can also
find books on Linux in a bookstore, for those who prefer a hard copy.
Linux is derived from Unix, and many of its commands are identical with,
or very similar to, older Unix commands. Since Apple's Mac OS X is also
derived from a version of Unix (BSD Unix), many of these commands are
the same as on a Mac.&lt;/p>
&lt;h2 id="essential-commands">Essential Commands&lt;/h2>
&lt;p>Typically one interacts with a Unix/Linux system using a Command Line
Interface (CLI), also known as a Terminal or a Shell. Unless one is
using a Desktop Manager on a Linux system, running programs (commands)
is by typing on the command line. Some of the more common commands that
just about everyone uses are listed below:&lt;/p>
&lt;ul>
&lt;li>&lt;code>pwd&lt;/code> - &amp;quot;print working directory&amp;quot; prints the name of the current
folder&lt;/li>
&lt;li>&lt;code>ls&lt;/code> - list directory lists all the files in the current folder&lt;/li>
&lt;li>&lt;code>ls -l&lt;/code> - long list lists the files along with permissions, creation
dates, etc&lt;/li>
&lt;li>&lt;code>ls -A&lt;/code> - list all files in current folder, including the hidden
ones&lt;/li>
&lt;li>&lt;code>cd&lt;/code> - change directory moves the current folder back to one's home
folder&lt;/li>
&lt;li>&lt;code>cd &amp;lt;pathname&amp;gt;&lt;/code> - change current folder to the one named by
&amp;lt;pathname&amp;gt;&lt;/li>
&lt;li>&lt;code>cd ..&lt;/code> - change to the parent folder of current folder&lt;/li>
&lt;li>&lt;code>mkdir &amp;lt;foldername&amp;gt;&lt;/code> - make a new folder (folders are also known as
directories)&lt;/li>
&lt;li>&lt;code>cat &amp;lt;filename&amp;gt;&lt;/code> - prints the contents of a text file&lt;/li>
&lt;li>&lt;code>cat &amp;lt;file1&amp;gt; &amp;lt;file2&amp;gt; &amp;gt; &amp;lt;file3&amp;gt;&lt;/code> - joins together text files &amp;lt;file1&amp;gt;
and &amp;lt;file2&amp;gt; and puts the result in &amp;lt;file3&amp;gt; (cat - is short for
concatenate)&lt;/li>
&lt;li>&lt;code>less &amp;lt;filename&amp;gt;&lt;/code> - lets you scroll up and down through a text file;
use Q to quit&lt;/li>
&lt;li>&lt;code>cp &amp;lt;file1&amp;gt; &amp;lt;file2&amp;gt;&lt;/code> - makes a copy of &amp;lt;file1&amp;gt; named &amp;lt;file2&amp;gt; in
the current folder; previous contents of &amp;lt;file2&amp;gt; (if any) are lost&lt;/li>
&lt;li>&lt;code>mv &amp;lt;file1&amp;gt; &amp;lt;file2&amp;gt;&lt;/code> - move &amp;lt;file1&amp;gt; to &amp;lt;file2&amp;gt;; used to rename a
file (previous contents of &amp;lt;file2&amp;gt; are lost)&lt;/li>
&lt;li>&lt;code>mv &amp;lt;foldername1&amp;gt; &amp;lt;foldername2&amp;gt;&lt;/code> - move &amp;lt;foldername1&amp;gt; to
&amp;lt;foldername2&amp;gt;; used to rename a folder name&lt;/li>
&lt;li>&lt;code>rm &amp;lt;file&amp;gt;&lt;/code> - remove a file (delete it)&lt;/li>
&lt;li>&lt;code>rm -r *&lt;/code> - recursively remove all files and folders in the current
folder (be VERY careful with this)&lt;/li>
&lt;li>&lt;code>rm -r &amp;lt;foldername&amp;gt;&lt;/code> - recursively remove the folder and all its
contents, including subfolders and their files&lt;/li>
&lt;li>&lt;code>rmdir &amp;lt;foldername&amp;gt;&lt;/code> - remove a folder (delete it); the folder must
be empty&lt;/li>
&lt;li>&lt;code>man &amp;lt;command&amp;gt;&lt;/code> - shows the manual page for the given &amp;lt;command&amp;gt;&lt;/li>
&lt;li>&lt;code>passwd&lt;/code> - change your password&lt;/li>
&lt;li>&lt;code>lpr &amp;lt;filename&amp;gt;&lt;/code> - print a file; should work with text, postscript,
and .pdf files.&lt;/li>
&lt;li>&lt;code>lpq&lt;/code> - show status of printer and print jobs&lt;/li>
&lt;li>&lt;code>lprm&lt;/code> &amp;lt;printno&amp;gt; - remove a printer job from the queue&lt;/li>
&lt;li>&lt;code>a2ps&lt;/code> - anything to postscript this (if installed) converts a file
into postcript and then prints it; gives nicer formatting for text
files&lt;/li>
&lt;li>&lt;code>nano&lt;/code> - edit a text file with a user friendly interface&lt;/li>
&lt;li>&lt;code>pico&lt;/code> - edit a text file (usually pico and nano are equivalent)&lt;/li>
&lt;li>&lt;code>nano &amp;lt;filename&amp;gt;&lt;/code> - edit the named file&lt;/li>
&lt;li>&lt;code>vi &amp;lt;filename&amp;gt;&lt;/code> - the old Unix visual editor; see the man page for
help&lt;/li>
&lt;li>&lt;code>emacs &amp;lt;filename&amp;gt;&lt;/code> - edit with the GNU Emacs editor; see the man
page for help&lt;/li>
&lt;li>&lt;code>exit&lt;/code> - quits the current Terminal session; CTRL-D often does the
same&lt;/li>
&lt;li>&lt;code>ping &amp;lt;URL&amp;gt;&lt;/code> - see if an IP address is answering&lt;/li>
&lt;li>&lt;code>who&lt;/code> - see who is logged on&lt;/li>
&lt;li>&lt;code>whoami&lt;/code> - see who you are (for the existentially challenged)&lt;/li>
&lt;li>&lt;code>top&lt;/code> - show the top running processes in a list, with process
numbers&lt;/li>
&lt;li>&lt;code>kill &amp;lt;number&amp;gt;&lt;/code> - kill a process number (you have to own the
process)&lt;/li>
&lt;li>&lt;code>finger &amp;lt;name&amp;gt;&lt;/code> - show stats for the user &amp;lt;name&amp;gt;; with no &amp;lt;name&amp;gt;
finger shows stats for all current users&lt;/li>
&lt;/ul>
&lt;p>Note that by default you are positioned in your home folder after
signing in. The file system is a tree with root at /, so to view the
entire file system start by typing cd followed by ls and so forth.
Pathnames are separated by forward slashes, so for example a file named
whosis in your home folder /home/myuserid has pathname
/home/myuserid/whosis. You can always refer to files by their fully
qualified pathnames, but lacking the full pathname the system will look
for the file in the current folder. Note that CTRL-C often cancels the
current process, and CTRL-D often serves as an End of File marker. All
of the above merely scratches the surface; see external documentation
for further particulars and advice.&lt;/p>
&lt;h2 id="why-learn-linux">Why learn Linux?&lt;/h2>
&lt;p>Because Unix and its offshoots remains one of the most important
operating systems for servers, and many networking concepts are rooted
in Unix for historical reasons. Because Unix/Linux systems are
efficient, fast, and highly stable. Because Unix/Linux is powerful:
check out wildcards, regular expressions, pipes, redirecting input and
output, shell scripts, and cron jobs for starters. There are some very
cool ideas here for the cognoscenti that just don't in the Windows
world (or are unwieldy when transplanted there). Linux is open source
software.&lt;/p>
&lt;h2 id="trying-linux">Trying Linux&lt;/h2>
&lt;p>For those who want to try it out on your personal laptop or desktop,
find a decent Linux distribution such as
&lt;a href="http://www.ubuntu.com/">Ubuntu&lt;/a>, download and burn the installation CD
for your hardware, and boot from the CD. This will give you a working
version of Linux running from the CD (slow) that can be played with. You
can also choose to install Linux on your hard drive next to the existing
OS (a dual boot approach) so that you can choose the OS at boot time, or
choose to install Linux in place of your existing OS.&lt;/p></description></item><item><title>Docs: Getting Help</title><link>/docs/how-to/getting-help/</link><pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate><guid>/docs/how-to/getting-help/</guid><description>
&lt;h2 id="e-mail">E-mail&lt;/h2>
&lt;p>Please direct all inquiries to Miao Ye (&lt;a href="mailto:helpdesk@cs.luc.edu">helpdesk@cs.luc.edu&lt;/a>).&lt;/p>
&lt;h2 id="microsoft-teams">Microsoft Teams&lt;/h2>
&lt;p>Please join the &lt;strong>Loyola CS Systems&lt;/strong> group on Loyola&amp;rsquo;s Microsoft Teams &lt;em>effective after Jnaury 1, 2022&lt;/em>.&lt;br>
This is available to Loyola faculty, staff, and students &lt;em>only&lt;/em>.&lt;/p></description></item><item><title>Docs: Remote Access</title><link>/docs/how-to/remoteaccess/</link><pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate><guid>/docs/how-to/remoteaccess/</guid><description>
&lt;p>All users of our systems can access their files remotely; however, we
currently do not provide general support to students or faculty for
Samba and CIFS shares (i.e. mounting as a Windows drive) owing largely
to security and usability considerations. (There is a legacy Samba
setup; however, no support is provided.) There are a number of
alternatives to Windows shares that we do support and consider effective
for most needs.&lt;/p>
&lt;h2 id="sshfs">sshfs&lt;/h2>
&lt;p>If you are a Linux or Mac user, you can use the Secure Shell Filesystem
client, which makes use of the Fuse project. Linux users can simply
install the sshfs package (e.g., on Ubuntu: &lt;code>apt-get install sshfs&lt;/code>).
The Dokan project on Windows provides the same capabilities as sshfs on
Linux and the Mac.&lt;/p>
&lt;h2 id="secure-ftp-sftp">Secure FTP (sftp)&lt;/h2>
&lt;p>Most Secure Shell clients have the ability to upload/download files. If
you are looking for something that is less transparent than a typical
filesystem and can live with an upload/download model, this might be all
you need (and seemingly, is what most of our users want).&lt;/p>
&lt;h2 id="version-control-systems">Version Control Systems&lt;/h2>
&lt;p>We recommend that all of our students learn how to use the Concurrent
Versioning System (CVS) or Subversion, especially for programming
classes. Source code management is available through command-line tools
or nicely integrated into many development environments, such as Eclipse
and NetBeans (even Visual Studio supports Subversion through the AnkhSVN
add-in). The TortoiseSVN and TortoiseHg clients for Windows are
particularly nice!&lt;/p>
&lt;h2 id="gnome-and-kde">Gnome and KDE&lt;/h2>
&lt;p>If you are an Ubuntu desktop user at home, both of these UIs allow you
to connect to a remote place via SSH and browse folders as part of the
UI's shell (that is, you don't need to go to the dreaded terminal). In
Gnome, Places -&amp;gt; Connect to Server will allow a user to connect to a
ssh server and will then treat that connection to your home directory
like a mounted drive.&lt;/p>
&lt;h2 id="putty-and-cygwin">PuTTY and Cygwin&lt;/h2>
&lt;p>Speaking of SSH access, Windows users are encouraged to use the PuTTY or
Cygwin support for SSH. There are a number of good commercial solutions
but these cost big money (between $75-$100) and are not likely to be
cost effective (let alone necessary) for most members of our community.&lt;/p>
&lt;h2 id="unison">Unison&lt;/h2>
&lt;p>Unison is an excellent 2-way file synchronization tool. It supports all
platforms.&lt;/p></description></item><item><title>Docs: Secure Shell</title><link>/docs/how-to/ssh/</link><pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate><guid>/docs/how-to/ssh/</guid><description>
&lt;p>Not all computer systems in the department are intended for general use,
and some are restricted to faculty and staff usage. (And many are
reserved for testing purposes.) The systems available for general use
include random.cs.luc.edu and infinity.cs.luc.edu.&lt;/p>
&lt;p>By default, SSH traffic (on port 22) is blocked outside of Loyola. You
will need to use the VPN or the public key authentication to connect to
our servers on an alternate port (22222).&lt;/p>
&lt;p>For most of our user community, we think the VPN is a reasonable
solution. If you don't have access, please let us know. We can get VPN
access for alumni and collaborators.&lt;/p>
&lt;h2 id="configuring-ssh-in-general">Configuring SSH in General&lt;/h2>
&lt;p>To use public key authentication (PKA), you need to make a configuration
after you install a ssh client, which includes three steps:&lt;/p>
&lt;ol>
&lt;li>generate a private and public key pair (Key Type: RSA Key Length:
1024);&lt;/li>
&lt;li>store private key in your local computer;&lt;/li>
&lt;li>save public key on the remote Linux server.&lt;/li>
&lt;/ol>
&lt;p>In the remaining sections, we discuss different configurations that are
commonly needed by faculty, staff, and students within our department.&lt;/p>
&lt;h2 id="bitvise-tunnelier">Bitvise Tunnelier&lt;/h2>
&lt;p>Two Quick Steps to Configure SSH Keys Authentication With bitvise SSH
client&lt;/p>
&lt;ol>
&lt;li>Download ssh client software from
&lt;a href="http://www.bitvise.com/download-area">http://www.bitvise.com/download-area&lt;/a>&lt;/li>
&lt;li>Generate a private and public key pair:
&lt;ul>
&lt;li>
&lt;p>click the link titled 'User keypair manager' in the Login tab.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>click the button [Generate New ...]&lt;/p>
&lt;/li>
&lt;li>
&lt;p>choose ssh-rsa and 1024bits&lt;/p>
&lt;/li>
&lt;li>
&lt;p>you can enter passphrase or leave it empty&lt;/p>
&lt;/li>
&lt;li>
&lt;p>click the button [Generate]&lt;/p>
&lt;blockquote>
&lt;p>This passphrase is not sent to the remote host, and it is only
used to protect your private key. Otherwise, anyone who has
access to your private key can authenticate to your account
automatically.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Export Public key to the Linux server &lt;em>User keypair manager&lt;/em>.
&lt;ul>
&lt;li>
&lt;p>click the keypair in the slots&lt;/p>
&lt;/li>
&lt;li>
&lt;p>click the button [Export..]&lt;/p>
&lt;/li>
&lt;li>
&lt;p>chose &amp;quot;Export public key&amp;quot; and &amp;quot;OpenSSH format&amp;quot;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>click the button [Export]&lt;/p>
&lt;/li>
&lt;li>
&lt;p>It should be something like:&lt;/p>
&lt;pre>&lt;code>ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAIEAo8q0r4d599buYHCbc36ViJniRuLvUr++asdSUh
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>You need to append that line to &lt;code>~/.ssh/authorized_keys&lt;/code> on the
Linux server.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="openssh-on-linux-mac-os-x-or-cygwin">OpenSSH on Linux, Mac OS X, or Cygwin&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Generate a private and public key pair&lt;/p>
&lt;p>::: literalinclude
openssh-keygen.txt
:::&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Save Public key on the Linux server&lt;/p>
&lt;p>::: literalinclude
openssh-savekey.txt
:::&lt;/p>
&lt;p>You need to append that line to ~/.ssh/authorized_keys on the Linux
server&lt;/p>
&lt;/li>
&lt;li>
&lt;p>connect to the Linux server:&lt;/p>
&lt;pre>&lt;code>$ ssh -p port-num xyz@server.cs.luc.edu
&lt;/code>&lt;/pre>
&lt;p>where xyz is your username on our Linux system. The port-num and
server name have been sent to your Loyola mailbox with your username
and password.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="putty">PuTTY&lt;/h2>
&lt;p>Five Quick Steps to Configure SSH Keys Authentication With PuTTY&lt;/p>
&lt;ol>
&lt;li>Download ssh client software:
&lt;ul>
&lt;li>Get the zip file with all PuTTY binaries
&lt;a href="http://the.earth.li/~sgtatham/putty/latest/x86/putty.zip">http://the.earth.li/~sgtatham/putty/latest/x86/putty.zip&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Generate a private and public key pair
&lt;ul>
&lt;li>Double click PuTTYgen.exe, press [Generate] button, keep
moving mouse. Once the keys are generated, enter a passphrase
for your private key, or leave the boxes empty if you do not
want to protect your private key with a passphrase.&lt;/li>
&lt;li>This passphrase is not sent to the remote host, and it is only
used to protect your private key. Otherwise, anyone who has
access to your private key can authenticate to your account
automatically.&lt;/li>
&lt;li>Click [Save Private key] button to save it in a file, say,
&lt;code>C:\ppp.ppk&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Save Public key on the Linux server
&lt;ul>
&lt;li>
&lt;p>cut/paste your public ssh key (Please see the figure in the web
page mentioned in the beginning) on ONE LINE (That is very
important!!!) in a file,&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Do not add the rsa-key-20090614 at the end. Make sure, there is
ssh-rsa at the beginning.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>It should be something like:&lt;/p>
&lt;pre>&lt;code>ssh-rsa ... 3434343234232m/PmcZJc5uVleXfp6yJIWG5xJE9TpY1VC4n/NQlWs1PTcplk5+xhUJPHjeMkKcVMIhhUGg0l+Tt08
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>You need to append that line to ~/.ssh/authorized_keys on the
Linux server.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Store Private key in PuTTY SSH authentication agent
&lt;ul>
&lt;li>Start the PuTTY SSH authentication agent PAGEANT.EXE (double
click the icon).&lt;/li>
&lt;li>After it started, right-click its syspanel icon (in the
right-bottom corner of your screen)and select &amp;quot;add key&amp;quot;.
Select your private key file, say C:ppp.ppk, and type in your
passphrase. The Pageant works as a passphrase keeper.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Use PuTTY to connect to the Linux server
&lt;ul>
&lt;li>Under &amp;quot;Host name or (IP address)&amp;quot; enter hostname&lt;/li>
&lt;li>Under &amp;quot;Port&amp;quot;, enter port number&lt;/li>
&lt;li>The port number and hostname have been sent to your Loyola
mailbox.&lt;/li>
&lt;li>Then, click [Open]&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>This is adapted from
&lt;a href="http://www.howtoforge.com/how-to-configure-ssh-keys-authentication-with-putty-and-linux-server-in-5-quick-steps">http://www.howtoforge.com/how-to-configure-ssh-keys-authentication-with-putty-and-linux-server-in-5-quick-steps&lt;/a>&lt;/p>
&lt;h2 id="ssh-communications">SSH Communications&lt;/h2>
&lt;p>Five Quick Steps to Configure SSH Keys Authentication With ssh Client
from SSH Communications&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Download ssh client software from:&lt;/p>
&lt;pre>&lt;code>- http://www.colorado.edu/its/docs/authenticate/printouts/win_ssh.html
- http://www.sfsu.edu/~helpdesk/ssh/ssh329/
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>Generate a private and public key pair&lt;/p>
&lt;ul>
&lt;li>In the toolbar of ssh client, there are several icons. First
from left is &amp;quot;Save&amp;quot;, and second is &amp;quot;Print&amp;quot;. The third from
RIGHT, is &amp;quot;Settings&amp;quot;.&lt;/li>
&lt;li>Click &amp;quot;Setting&amp;quot; icon.&lt;/li>
&lt;li>In the &amp;quot;Setting&amp;quot; windows, go to &amp;quot;Global Settings&amp;quot;-&amp;gt;&amp;quot;User
Authentication&amp;quot;-&amp;gt;&amp;quot;Keys&amp;quot;.&lt;/li>
&lt;li>Click &amp;quot;Keys&amp;quot;.&lt;/li>
&lt;li>Under &amp;quot;Key pair management&amp;quot;, click &amp;quot;Generate New&amp;quot;, then
click Next.&lt;/li>
&lt;li>In the &amp;quot;Key Generation&amp;quot; window that appears:&lt;/li>
&lt;li>From the drop-down list next to &amp;quot;Key Type:&amp;quot;, select RSA&lt;/li>
&lt;li>From the the drop-down list next to &amp;quot;Key Length:&amp;quot;, select
1024.&lt;/li>
&lt;li>Click Next. The key generation process will start. When it's
complete, click Next again.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Store private key&lt;/p>
&lt;ul>
&lt;li>In the &amp;quot;File Name:&amp;quot; field, enter a name for the file where SSH
Secure Shell will store your private key. Your public key will
be stored in a file with the same name, plus a .pub extension.&lt;/li>
&lt;li>In the boxes next to &amp;quot;Passphrase:&amp;quot;, enter a passphrase for
your private key, or leave the boxes empty if you do not want to
protect your private key with a passphrase.&lt;/li>
&lt;li>This passphrase is not sent to the remote host, and it is only
used to protect your private key. Otherwise, anyone who has
access to your private key can authenticate to your account
automatically.&lt;/li>
&lt;li>click Next, and then Finish.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Save Public key on the Linux server&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Under &amp;quot;Public Key management&amp;quot;, click &amp;quot;View&amp;quot;. Notepad or
another editor will open xxx.pub You may save it in a file.
Then, you need to append that file to ~/.ssh/authorized_keys on
the Linux server.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>You may need to add ssh-rsa at the beginning of the key and edit
it to make the key on one line, ex.:&lt;/p>
&lt;pre>&lt;code>---- BEGIN SSH2 PUBLIC KEY ----
&lt;/code>&lt;/pre>
&lt;p>Comment: &amp;quot;[2048-bit rsa, &lt;a href="mailto:cs@luc-cs-101">cs@luc-cs-101&lt;/a>, Thu Jul 29 2010
01:16:06]&amp;quot; ssh-rsa
AAAAB3NzaC1yc25A4vaINWk8i8vRAYOWoPacCP8KU3NUqWExy2a6lUq75F3pYmg46cjZ8gj9aEVcGgAwGgo4XP4TBB
---- END SSH2 PUBLIC KEY ----&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Use ssh client to connect to the Linux server&lt;/p>
&lt;ul>
&lt;li>&amp;quot;Host Name:&amp;quot; to hostname&lt;/li>
&lt;li>&amp;quot;Port Number:&amp;quot; to port number&lt;/li>
&lt;li>&amp;quot;Authentication Method:&amp;quot; to Public Key.&lt;/li>
&lt;li>The port number and hostname have been sent to your Loyola
mailbox with your username and password.&lt;/li>
&lt;li>You will be prompted for the passphrase for your private key (if
you supplied one). If you did not supply a passphrasefor your
private key, you will not receive a request for a passphrase
when connecting to the remote host.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>See &lt;a href="http://kb.iu.edu/data/amzx.html">http://kb.iu.edu/data/amzx.html&lt;/a> for additional details. We
have adapted our instructions from this page.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="cygwin-ssh-installation">Cygwin SSH Installation&lt;/h2>
&lt;ol>
&lt;li>go to &lt;a href="http://www.cygwin.com/setup.exe">http://www.cygwin.com/setup.exe&lt;/a>
&lt;ul>
&lt;li>This will download a GUI installer called setup.exe which can be
run to download a complete cygwin installation via the internet.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Download Source
&lt;ul>
&lt;li>Please choose [Install from Internet] option, setup.exe
creates a local directory to store the packages before actually
installing the contents. The Root Directory for Cygwin (default
C:cygwin) will become / within your Cygwin installation.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Choosing Packages
&lt;ul>
&lt;li>Activate the window [Select Packages]&lt;/li>
&lt;li>enter ssh in [search] box&lt;/li>
&lt;li>click [+] Net ...&lt;/li>
&lt;li>click []Skip openssh ...n&lt;/li>
&lt;li>then click [Next] .&amp;hellip;&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>After installing Cygwin/openssh, you can configure OpenSSH for
Public Key Authentication&lt;/li>
&lt;/ol></description></item></channel></rss>